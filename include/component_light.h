// -----------------------------------------------------------------------------
// Onset Engine
// https://github.com/dylanafterall/OnsetEngine.git
//
// component_light.h
//  header: component to hold light source data
// -----------------------------------------------------------------------------
#ifndef COMPONENT_LIGHT_H
#define COMPONENT_LIGHT_H

#include "glm/glm.hpp"

/** 
 * \brief   The LightComponent struct.
 * \details A struct to hold data pertaining to a light source.
 */
struct LightComponent {
    /**
     * \brief Type of light source: 
     *        directional = 0,
     *        point = 1,
     *        spot = 2
     */
    unsigned int m_type;
    /**
     * \brief Vector representing scaling factors for rendering.
     */
    glm::vec3 m_scale;
    
    /**
     * \brief Vector of direction of light from (directional/spot) light source.
     */
    glm::vec3 m_direction;
    /**
     * \brief Inner cutoff angle, used used in creating smooth/soft edge for spotlights.
     */
    float m_cutOff;
    /**
     * \brief Outer cutoff angle, used in creating smooth/soft edge for spotlights.
     */
    float m_outerCutOff;

    /**
     * \brief A constant coefficient used in calculating light attenuation. 
     */
    float m_constant;
    /**
     * \brief A linear coefficient used in calculating light attenuation.
     */
    float m_linear;
    /**
     * \brief A quadratic coefficient used in calculating light attenuation. 
     */
    float m_quadratic;

    /**
     * \brief RGB values for ambient light generated by this source. 
     */
    glm::vec3 m_ambient;
    /**
     * \brief RBG values for diffused light generated by this source.
     */
    glm::vec3 m_diffuse;
    /**
     * \brief RBG values for specular light generated by this source. 
     */
    glm::vec3 m_specular;
};

#endif // COMPONENT_LIGHT_H