// -----------------------------------------------------------------------------
// Onset Engine
// https://github.com/dylanafterall/OnsetEngine.git
//
// component_mesh_cube.h
//  component to hold vertex (x,y,z / i,j,k / u,v) data for OpenGL rendering 
// -----------------------------------------------------------------------------

#ifndef COMPONENT_MESH_CUBE_H
#define COMPONENT_MESH_CUBE_H

struct MeshCubeComponent { 
	float m_vertices[288] = { 
		-1.000000f, 1.000000f, 1.000000f, -0.577400f, 0.577400f, 0.577400f, 0.625000f, 0.000000f, 
		-1.000000f, -1.000000f, -1.000000f, -0.577400f, -0.577400f, -0.577400f, 0.375000f, 0.250000f, 
		-1.000000f, -1.000000f, 1.000000f, -0.577400f, -0.577400f, 0.577400f, 0.375000f, 0.000000f, 
		-1.000000f, 1.000000f, -1.000000f, -0.577400f, 0.577400f, -0.577400f, 0.625000f, 0.250000f, 
		1.000000f, -1.000000f, -1.000000f, 0.577400f, -0.577400f, -0.577400f, 0.375000f, 0.500000f, 
		-1.000000f, -1.000000f, -1.000000f, -0.577400f, -0.577400f, -0.577400f, 0.375000f, 0.250000f, 
		1.000000f, 1.000000f, -1.000000f, 0.577400f, 0.577400f, -0.577400f, 0.625000f, 0.500000f, 
		1.000000f, -1.000000f, 1.000000f, 0.577400f, -0.577400f, 0.577400f, 0.375000f, 0.750000f, 
		1.000000f, -1.000000f, -1.000000f, 0.577400f, -0.577400f, -0.577400f, 0.375000f, 0.500000f, 
		1.000000f, 1.000000f, 1.000000f, 0.577400f, 0.577400f, 0.577400f, 0.625000f, 0.750000f, 
		-1.000000f, -1.000000f, 1.000000f, -0.577400f, -0.577400f, 0.577400f, 0.375000f, 1.000000f, 
		1.000000f, -1.000000f, 1.000000f, 0.577400f, -0.577400f, 0.577400f, 0.375000f, 0.750000f, 
		1.000000f, -1.000000f, -1.000000f, 0.577400f, -0.577400f, -0.577400f, 0.375000f, 0.500000f, 
		-1.000000f, -1.000000f, 1.000000f, -0.577400f, -0.577400f, 0.577400f, 0.125000f, 0.750000f, 
		-1.000000f, -1.000000f, -1.000000f, -0.577400f, -0.577400f, -0.577400f, 0.125000f, 0.500000f, 
		-1.000000f, 1.000000f, -1.000000f, -0.577400f, 0.577400f, -0.577400f, 0.875000f, 0.500000f, 
		1.000000f, 1.000000f, 1.000000f, 0.577400f, 0.577400f, 0.577400f, 0.625000f, 0.750000f, 
		1.000000f, 1.000000f, -1.000000f, 0.577400f, 0.577400f, -0.577400f, 0.625000f, 0.500000f, 
		-1.000000f, 1.000000f, 1.000000f, -0.577400f, 0.577400f, 0.577400f, 0.625000f, 0.000000f, 
		-1.000000f, 1.000000f, -1.000000f, -0.577400f, 0.577400f, -0.577400f, 0.625000f, 0.250000f, 
		-1.000000f, -1.000000f, -1.000000f, -0.577400f, -0.577400f, -0.577400f, 0.375000f, 0.250000f, 
		-1.000000f, 1.000000f, -1.000000f, -0.577400f, 0.577400f, -0.577400f, 0.625000f, 0.250000f, 
		1.000000f, 1.000000f, -1.000000f, 0.577400f, 0.577400f, -0.577400f, 0.625000f, 0.500000f, 
		1.000000f, -1.000000f, -1.000000f, 0.577400f, -0.577400f, -0.577400f, 0.375000f, 0.500000f, 
		1.000000f, 1.000000f, -1.000000f, 0.577400f, 0.577400f, -0.577400f, 0.625000f, 0.500000f, 
		1.000000f, 1.000000f, 1.000000f, 0.577400f, 0.577400f, 0.577400f, 0.625000f, 0.750000f, 
		1.000000f, -1.000000f, 1.000000f, 0.577400f, -0.577400f, 0.577400f, 0.375000f, 0.750000f, 
		1.000000f, 1.000000f, 1.000000f, 0.577400f, 0.577400f, 0.577400f, 0.625000f, 0.750000f, 
		-1.000000f, 1.000000f, 1.000000f, -0.577400f, 0.577400f, 0.577400f, 0.625000f, 1.000000f, 
		-1.000000f, -1.000000f, 1.000000f, -0.577400f, -0.577400f, 0.577400f, 0.375000f, 1.000000f, 
		1.000000f, -1.000000f, -1.000000f, 0.577400f, -0.577400f, -0.577400f, 0.375000f, 0.500000f, 
		1.000000f, -1.000000f, 1.000000f, 0.577400f, -0.577400f, 0.577400f, 0.375000f, 0.750000f, 
		-1.000000f, -1.000000f, 1.000000f, -0.577400f, -0.577400f, 0.577400f, 0.125000f, 0.750000f, 
		-1.000000f, 1.000000f, -1.000000f, -0.577400f, 0.577400f, -0.577400f, 0.875000f, 0.500000f, 
		-1.000000f, 1.000000f, 1.000000f, -0.577400f, 0.577400f, 0.577400f, 0.875000f, 0.750000f, 
		1.000000f, 1.000000f, 1.000000f, 0.577400f, 0.577400f, 0.577400f, 0.625000f, 0.750000f
	};

	int m_verticesSize = 1152;

	int m_vertexCount = 36;
}; 

#endif // COMPONENT_MESH_CUBE_H
